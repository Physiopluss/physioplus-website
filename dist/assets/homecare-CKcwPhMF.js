import{m as o,C as u,D as w}from"./index-B5YKgjKu.js";const z=async r=>{try{const e=await o.post("web/patient/loginOtp",{phone:r});return e.status>=200&&e.status<300||e.status>=400&&e.status<500?e:new Error("Something went wrong")}catch(e){return e.response?e.response:e.message}},E=async(r,e,t,a,n,p,c)=>{try{const s=await o.post("web/patient/verifyOtp",{phone:r,otp:e,type:t,fullName:a,gender:n,date:p,dob:c});return s.status>=200&&s.status<300||s.status>=400&&s.status<500?s:new Error("Something went wrong")}catch(s){return s.response}},b=async r=>{try{const e=await o.post("web/patient/signUpOtp",{fullName:r.fullName,phone:r.phone,dob:r.date,gender:r.gender});return e.status>=200&&e.status<300||e.status>=400&&e.status<500?e:new Error("Something went wrong")}catch(e){return e.response}};async function I(r){var t;const e=await o.get("/web/patient/getPatientById",{params:{patientId:r}});return(t=e==null?void 0:e.data)==null?void 0:t.data}async function _(r,e){const t=await o.put(`/web/patient/updatePatient/${r}`,e);return t==null?void 0:t.data}const A=async(r,e)=>{const t={fileName:r.name,fileType:r.type,folder:e};return(await u.get("/get-presigned-url",{params:t})).data},T=async(r,e)=>{await w.put(e,r,{headers:{"Content-Type":r.type}}),console.log("File uploaded successfully:",e)};async function C(r){var e;try{const t=await o.get("web/patient/getPatientAppointments",{params:{patientId:r}});return(e=t==null?void 0:t.data)==null?void 0:e.data}catch(t){throw console.error("Error fetching consultations:",t),t}}async function q(r){var e;try{const t=await o.get("web/patient/singleAppointment",{params:{consultationId:r}});return(e=t==null?void 0:t.data)==null?void 0:e.data}catch(t){throw console.error("Error fetching consultation:",t),t}}const B=async({selectedDate:r,couponId:e,amount:t,phone:a,formData:n,patientId:p,physioId:c,userToken:s})=>{var y;if(!s)throw new Error("userToken is required");if(!p)throw new Error("patientId is required");if(!c)throw new Error("physioId is required");if(!t)throw new Error("amount is required");try{const i=await o.post("/web/patient/payAppointmentDayByCash",{date:r,phone:a,age:n==null?void 0:n.age,patientName:n==null?void 0:n.name,gender:n==null?void 0:n.gender,painNotes:n.problem,appointmentAddress:n==null?void 0:n.address,nearby:n==null?void 0:n.nearby,zipCode:n==null?void 0:n.pincode,latitude:n==null?void 0:n.lat,longitude:n==null?void 0:n.lng,couponId:e,amount:t,patientId:p,physioId:c},{headers:{"Content-Type":"application/json",Authorization:`Bearer ${s}`}});if(i.status>=200&&i.status<300)return i.data.data;throw new Error(((y=i==null?void 0:i.data)==null?void 0:y.message)||"Payment initiation failed")}catch(i){throw console.error("Razorpay Payment Error:",i),i}},R=async({selectedDate:r,couponId:e,amount:t,phone:a,formData:n,patientId:p,physioId:c,userToken:s})=>{var y;if(!s)throw new Error("userToken is required");if(!p)throw new Error("patientId is required");if(!c)throw new Error("physioId is required");if(!t)throw new Error("amount is required");try{const i=await o.post("/web/patient/payAppointmentDay",{date:r,phone:a,age:n==null?void 0:n.age,patientName:n==null?void 0:n.name,gender:n==null?void 0:n.gender,painNotes:n==null?void 0:n.problem,appointmentAddress:n==null?void 0:n.address,nearby:n==null?void 0:n.nearby,zipCode:n==null?void 0:n.pincode,latitude:n==null?void 0:n.lat,longitude:n==null?void 0:n.lng,couponId:e,amount:t,patientId:p,physioId:c},{headers:{"Content-Type":"application/json",Authorization:`Bearer ${s}`}});if(i.status>=200&&i.status<300){const d=i.data.data;return await l({data:d,userToken:s})}else throw new Error(((y=i==null?void 0:i.data)==null?void 0:y.message)||"Payment initiation failed")}catch(i){throw console.error("Razorpay Payment Error:",i),i}},l=async({data:r,userToken:e})=>new Promise((t,a)=>{const n={key:"rzp_live_dide7BrPMysRI2",amount:r.notes.amount,currency:r.currency,age:r.notes.age,name:"Physioplus Healthcare",address:r.notes.appointmentAddress,description:`Appointment Payment - Physio ID: ${r.notes.physioId}`,order_id:r.id,prefill:{name:r.notes.patientName,contact:r.notes.phone},handler:async p=>{var c;try{const s=await o.post("web/patient/verifyAppointmentPayment",{orderId:p.razorpay_order_id,razorpay_payment_id:p.razorpay_payment_id,razorpay_signature:p.razorpay_signature},{headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}});s.status>=200&&s.status<300?t(s.data):a(new Error(((c=s.data)==null?void 0:c.message)||"Payment verification failed"))}catch(s){console.error("Payment verification error:",s),a(s)}},theme:{color:"#039342"}};window.Razorpay?new window.Razorpay(n).open():a(new Error("Razorpay is not available"))}),v=async({orderId:r,patientId:e,physioId:t})=>{if(!r||!e||!t)throw new Error("Missing required parameters");return await o.get("/web/patient/sendNotificationForTreatment",{params:{appointmentId:r,patientId:e,physioId:t}})},m=async(r,e)=>{if(!r)throw new Error("Order ID is required");if(!e)throw new Error("type is required");return(await o.get("/web/patient/getInvoice",{params:{appointmentId:r,type:e}})).data};async function N(r){var e;try{const t=await o.get("web/patient/getPatientTreatments",{params:{patientId:r}});return(e=t==null?void 0:t.data)==null?void 0:e.data}catch(t){throw console.error("Error fetching treatments:",t),t}}async function $(r){var e;try{const t=await o.get("web/patient/singleTreatment",{params:{treatmentId:r}});return(e=t==null?void 0:t.data)==null?void 0:e.data}catch(t){throw console.error("Error fetching treatment:",t),t}}const O=(r,e)=>o.put(`/web/patient/updateCashBack?CashBackId=${r}&userUpiId=${e}`),F=async(r,e,t)=>{try{const a=await o.post("web/patient/coupon",{couponName:r,patientId:e},{headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`}});if(a.status>=200&&a.status<300)return a.data;if(a.status>=400&&a.status<500)return a}catch(a){return a.response?a.response:a.message}},S=async({treatmentDayIds:r,orderId:e,couponId:t,amount:a,patientId:n,physioId:p,userToken:c})=>{var s;if(!c)throw new Error("userToken is required");if(!n)throw new Error("patientId is required");if(!p)throw new Error("physioId is required");if(!a)throw new Error("amount is required");try{const y=await o.post("/web/patient/payTreatmentDay",{dateIds:r,appointmentsId:e,couponId:t,amount:a,patientId:n,physioId:p},{headers:{"Content-Type":"application/json",Authorization:`Bearer ${c}`}});if(y.status>=200&&y.status<300){const i=y.data.razorpay;return await h({data:i,userToken:c})}else throw new Error(((s=y==null?void 0:y.data)==null?void 0:s.message)||"Payment initiation failed")}catch(y){throw console.error("Razorpay Payment Error:",y),y}},h=async({data:r,userToken:e})=>new Promise((t,a)=>{const n={key:"rzp_live_dide7BrPMysRI2",amount:r.notes.amount,currency:r.currency,name:"Physioplus Healthcare",description:`Treatment Payment - Physio ID: ${r.notes.physioId}`,order_id:r.id,prefill:{name:r.notes.patientName,contact:r.notes.phone},handler:async p=>{var c;try{const s=await o.post("web/patient/verifyTreatmentPayment",{orderId:p.razorpay_order_id,razorpay_payment_id:p.razorpay_payment_id,razorpay_signature:p.razorpay_signature},{headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}});s.status>=200&&s.status<300?t(s.data):a(new Error(((c=s.data)==null?void 0:c.message)||"Payment verification failed"))}catch(s){console.error("Payment verification error:",s),a(s)}},theme:{color:"#039342"}};window.Razorpay?new window.Razorpay(n).open():a(new Error("Razorpay is not available"))});async function k(r){try{const e=await o.post("web/patient/addRatingToPhysio",r);return e==null?void 0:e.data}catch(e){throw console.error("Error rating physio:",e),e}}async function H(r={}){var e;try{const t=await o.get("web/physio/allPhysios",{params:r});return(e=t==null?void 0:t.data)==null?void 0:e.data}catch(t){throw t}}async function j(r){var e;try{const t=await o.get("web/physio/singlePhysio",{params:{physioId:r}});return(e=t==null?void 0:t.data)==null?void 0:e.data}catch(t){throw console.error("Error fetching physio:",t),t}}export{E as O,A as a,C as b,N as c,v as d,_ as e,q as f,I as g,m as h,O as i,$ as j,F as k,z as l,H as m,j as n,B as o,S as p,R as q,k as r,b as s,T as u};
